#### 迭代器
迭代器是一个可以记住遍历位置的对象
迭代器对象从集合的第一个位置访问，直到所有元素被访问完，切只能前进不能后退

    
有两个基本的方法：iter()创建迭代器，next()访问迭代器一次只能取一个
    
    list = [1,2,3,4]
    iterw = iter(list)
    print(next(iterw))
    
常用的 字符串，列表 元组，字典都可用来创建迭代器

可以被常规for语句访问，用while语句时要用next() 函数，但注意当迭代器遍历结束时next()函数会抛出停止迭代的异常，即可结束迭代
    
    list = [1,2,3,4]
    iters = iter(list)
    while True:
        try:
             print(next(iters))
        except StopIteration:
            break
        

#### 创建一个迭代器
除了传统的，用字符串，列表，元组，字典外，还可以自己实现一个迭代器
在上面的字典，列表元组中，他们有一个共同的特点，都实现了__iter__,__next__这两个内置函数
只要实现这两个协议那么我们就可以创建一个自己的迭代对象,我们可以实现一个简单的range()函数，

在py3中range()就是用迭代器来实现的，当我们要生成数列的时候，不必要一次性生成全部的数列可以减少空间开销








